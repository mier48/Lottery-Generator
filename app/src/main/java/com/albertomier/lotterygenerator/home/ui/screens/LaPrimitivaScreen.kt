package com.albertomier.lotterygenerator.home.ui.screens

import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Scaffold
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.livedata.observeAsState
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.unit.dp
import com.albertomier.lotterygenerator.R
import com.albertomier.lotterygenerator.home.ui.components.BoxNumber
import com.albertomier.lotterygenerator.home.ui.components.BoxTitle
import com.albertomier.lotterygenerator.home.ui.components.RoundedButton
import com.albertomier.lotterygenerator.home.ui.viewmodel.HomeViewModel
import com.albertomier.lotterygenerator.main.base.ShowProgressIndicator
import com.albertomier.lotterygenerator.main.components.DefaultImage

@Composable
fun LaPrimitivaScreen(viewModel: HomeViewModel) {
    val context = LocalContext.current
    var generated by remember { mutableStateOf(false) }

    val primitivaNumbersList: List<Int> by viewModel.primitivaNumbersList.observeAsState(initial = emptyList())
    val primitivaReintegroList: List<Int> by viewModel.primitivaReintegroList.observeAsState(initial = emptyList())
    val primitivaComplementarioList: List<Int> by viewModel.primitivaComplementarioList.observeAsState(initial = emptyList())
    val loading: Boolean by viewModel.loading.observeAsState(initial = false)

    Scaffold(modifier = Modifier.fillMaxSize()) {
        Column(modifier = Modifier.verticalScroll(rememberScrollState())) {
            Column(
                verticalArrangement = Arrangement.spacedBy(8.dp),
                modifier = Modifier.padding(12.dp)
            ) {
                DefaultImage(
                    drawable = R.drawable.primitiva_logo,
                    modifier = Modifier.fillMaxWidth(),
                    contentScale = ContentScale.FillWidth
                )

                RoundedButton(text = "Generar") {
                    viewModel.generatePrimitivaNumbers()
                    generated = true
                }
            }

            Column(modifier = Modifier.fillMaxWidth()) {
                if (loading) {
                    ShowProgressIndicator()
                } else {
                    if (generated) {
                        NumbersLayout(primitivaNumbersList)
                        ReintegroLayout(primitivaReintegroList)
                        ComplementarioLayout(primitivaComplementarioList)
                    }
                }
            }
        }
    }
}

@Composable
private fun NumbersLayout(primitivaNumbersList: List<Int>) {
    BoxTitle(text = "NÃºmeros")

    Row(
        horizontalArrangement = Arrangement.Center,
        modifier = Modifier
            .padding(6.dp)
            .fillMaxWidth()
    ) {
        BoxNumber(text = "${primitivaNumbersList[0]}")
        Spacer(modifier = Modifier.padding(6.dp))
        BoxNumber(text = "${primitivaNumbersList[1]}")
        Spacer(modifier = Modifier.padding(6.dp))
        BoxNumber(text = "${primitivaNumbersList[2]}")
        Spacer(modifier = Modifier.padding(6.dp))
        BoxNumber(text = "${primitivaNumbersList[3]}")
        Spacer(modifier = Modifier.padding(6.dp))
        BoxNumber(text = "${primitivaNumbersList[4]}")
        Spacer(modifier = Modifier.padding(6.dp))
        BoxNumber(text = "${primitivaNumbersList[5]}")
    }
}


@Composable
private fun ReintegroLayout(primitivaReintegroList: List<Int>) {
    BoxTitle(text = "Reintegro")

    Row(
        horizontalArrangement = Arrangement.Center,
        modifier = Modifier
            .padding(6.dp)
            .fillMaxWidth()
    ) {
        BoxNumber(text = "${primitivaReintegroList[0]}")
    }
}

@Composable
private fun ComplementarioLayout(primitivaComplementarioList: List<Int>) {
    BoxTitle(text = "Complementario")

    Row(
        horizontalArrangement = Arrangement.Center,
        modifier = Modifier
            .padding(6.dp)
            .fillMaxWidth()
    ) {
        BoxNumber(text = "${primitivaComplementarioList[0]}")
    }
}